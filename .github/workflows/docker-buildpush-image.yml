name: Build and Push Docker Image  # Naam van de workflow

on:
  push:
    branches:
      - main  # Workflow wordt geactiveerd bij een push naar de 'main' branch
  pull_request:
    branches:
      - main  # Workflow wordt ook geactiveerd bij pull requests naar de 'main' branch

jobs:
  build:
    runs-on: Ubuntu-latest
    # De job wordt uitgevoerd op een github gehoste runner (ubuntu-latest)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Haalt de repository code op zodat de workflow ermee kan werken

      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Logt in op Docker Hub met behulp van geheimen
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Gebruikersnaam uit GitHub Secrets
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  # Toegangstoken uit GitHub Secrets

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Stelt Docker Buildx in, wat geavanceerde build-mogelijkheden biedt

      - name: Cache Docker layers
        uses: actions/cache@v3  
        with:
          path: /tmp/.buildx-cache  
          key: ${{ runner.os }}-buildx-${{ github.sha }}  
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/password-generator-web:latest .  
          # Bouwt de Docker-image en tagt deze als 'latest' met de Docker Hub-gebruikersnaam
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/password-generator-web:latest  
          # Pusht de image naar Docker Hub
  deploy: 
    runs-on: [self-hosted, linux]
    needs: build
    
    steps:
      - name: Update Docker Swarm service
        run: |
          sudo /home/student/smart-swarm-update.sh

